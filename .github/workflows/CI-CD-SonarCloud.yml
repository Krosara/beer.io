name: Java CI

on:
  push:
      branches: 
       - master
       - development
  pull_request:
      branches:
        - master
        - development
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 
      - name: Set up JDK 16
        uses: actions/setup-java@v1
        with:
          java-version: 16
      - name: Grant execute permission for gradlew
        run: chmod +x ./backend/gradlew
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: cd backend; ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: cd backend; ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: cd backend; ./gradlew build sonarqube --info

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 16
#       uses: actions/setup-java@v2
#       with:
#         java-version: '16'
#         distribution: 'adopt'
#         cache: gradle
#     - name: Grant execute permission for gradlew
#       run: chmod +x ./backend/gradlew
#     - name: Build with Gradle
#       run: cd backend; ./gradlew build -x test
#     - name: Run tests with Gradle
#       run: cd backend; ./gradlew test
  
  deploy:
    needs: [build]
    env:
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      REPOSITORY_NAME: beer.io
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        run: docker login --username=$USERNAME --password=$DOCKER_HUB_PASSWORD
      - name: Build Frontend Image
        run: cd frontend; docker build -t $USERNAME/$REPOSITORY_NAME-frontend .
      - name: Push Frontend Image
        run: cd frontend; docker push $USERNAME/$REPOSITORY_NAME-frontend
      - name: Build Backend Image
        run: cd backend; docker build -t $USERNAME/$REPOSITORY_NAME-backend .
      - name: Push Backend Image
        run: cd backend; docker push $USERNAME/$REPOSITORY_NAME-backend
