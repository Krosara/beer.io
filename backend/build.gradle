plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

group = 'com.savov'
version = '1.0'
sourceCompatibility = '16'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation 'org.springframework:spring-web:5.3.10'
    implementation 'org.springframework.boot:spring-boot-starter:2.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.4'
    implementation 'org.postgresql:postgresql:42.2.24'
    implementation 'org.hibernate.orm:hibernate-core:6.0.0.Alpha9'


    implementation 'junit:junit:4.13.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.0'
    testImplementation "org.assertj:assertj-core:3.21.0"
    testImplementation "org.mockito:mockito-core:3.+"
    testImplementation 'com.h2database:h2:1.4.200'

    implementation 'org.modelmapper:modelmapper:2.4.4'

    //auth
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.auth0:java-jwt:3.18.2'

    //websockets
    implementation 'org.springframework.boot:spring-boot-starter-websocket'


}

sonarqube {
    properties {
        property "sonar.projectKey", "Krosara_beer.io"
        property "sonar.organization", "krosara"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.enabled true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/savov/beer_io/exceptions/*Exception.*",
                    "com/savov/beer_io/dto/*DTO.*"
            ])
        }))
    }
}

test.finalizedBy jacocoTestReport

tasks.named('sonarqube').configure {
    dependsOn test
}

test {
    useJUnitPlatform()
}



